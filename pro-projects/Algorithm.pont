; Sat Jun 10 18:40:15 MSK 2017
; 
;+ (version "3.5")
;+ (build "Build 663")


(defclass %3ACLIPS_TOP_LEVEL_SLOT_CLASS "Fake class to save top-level slot information"
	(is-a USER)
	(role abstract)
	(multislot end
		(type INSTANCE)
;+		(allowed-classes Process)
		(create-accessor read-write))
	(multislot flow-chart
		(type INSTANCE)
;+		(allowed-classes Process Decision Input PredefinedProcess)
		(create-accessor read-write))
	(single-slot variable
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot values
		(type STRING)
		(create-accessor read-write))
	(multislot objects
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
		(create-accessor read-write))
	(single-slot next
		(type INSTANCE)
;+		(allowed-classes Process Decision Input PredefinedProcess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot code
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot variants
		(type INSTANCE)
;+		(allowed-classes Process Decision)
		(create-accessor read-write))
	(single-slot begin
		(type INSTANCE)
;+		(allowed-classes Input Process Decision PredefinedProcess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot object-rows
		(type INSTANCE)
;+		(allowed-classes ObjectRow)
		(create-accessor read-write))
	(single-slot algorithm
		(type INSTANCE)
;+		(allowed-classes Algorithm)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Algorithm+Ontology
	(is-a USER)
	(role abstract))

(defclass Algorithm
	(is-a Algorithm+Ontology)
	(role concrete)
	(multislot end
		(type INSTANCE)
;+		(allowed-classes Process)
		(create-accessor read-write))
	(single-slot title
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot begin
		(type INSTANCE)
;+		(allowed-classes Input Process Decision PredefinedProcess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot flow-chart
		(type INSTANCE)
;+		(allowed-classes Process Decision Input PredefinedProcess)
		(create-accessor read-write)))

(defclass Process
	(is-a Algorithm+Ontology)
	(role concrete)
	(single-slot title
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot code
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot next
		(type INSTANCE)
;+		(allowed-classes Process Decision Input PredefinedProcess)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Decision
	(is-a Algorithm+Ontology)
	(role concrete)
	(single-slot title
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot code
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot variants
		(type INSTANCE)
;+		(allowed-classes Process Decision)
		(create-accessor read-write)))

(defclass Input
	(is-a Algorithm+Ontology)
	(role concrete)
	(single-slot title
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot code
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot next
		(type INSTANCE)
;+		(allowed-classes Process Decision Input PredefinedProcess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot object-rows
		(type INSTANCE)
;+		(allowed-classes ObjectRow)
		(create-accessor read-write)))

(defclass PredefinedProcess
	(is-a Algorithm+Ontology)
	(role concrete)
	(single-slot title
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot algorithm
		(type INSTANCE)
;+		(allowed-classes Algorithm)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot next
		(type INSTANCE)
;+		(allowed-classes Process Decision Input PredefinedProcess)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot object-rows
		(type INSTANCE)
;+		(allowed-classes ObjectRow)
		(create-accessor read-write)))

(defclass ObjectRow
	(is-a Algorithm+Ontology)
	(role concrete)
	(single-slot variable
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot objects
		(type INSTANCE)
;+		(allowed-classes %3ATHING)
		(create-accessor read-write)))